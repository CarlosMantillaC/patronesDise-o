/*
Categoria: Comportamental
Proposito: Definir un objeto que encapsula como interactuan un conjunto de objetos,
promoviendo un bajo acoplamiento.
Como funciona:
Los objetos no se comunican directamente, sino a traves del mediador.
Ejemplo:
Un sistema de chat donde el mediador gestiona la comunicaci√≥n entre usuarios.
*/


//Interfaz del mediador
interface ChatMediator:
    metodo enviarMensaje()

//Clase concreta del mediador
clase ChatSala implementa ChatMediator:

    constructor():  
        this.usuarios = []
    
    metodo agregarUsuario(usuario: Usuario):
        this.usuarios.agregar(usuario)

    metodo enviarMensaje(mensaje, emisor: Usuario):
        para cada usuario en usuarios:
            si usuario != emisor:
                usuario.recibirMensaje(mensaje)
    

//Clase Usuario (Colegas)
Clase Usuario:

    constructor(nombre, mediador: ChatMediator):
        this.nombre = nombre
        this.mediador = mediador

    metodo enviarMensaje(mensaje):
        imprimir nombre + "envia: " + mensaje
        mediador.enviarMensaje(mensaje, emisor: this)
    
    metodo recibirMensaje(mensaje):
        imprimir nombre + "recibe: " + mensaje


//Uso del patron
sala = new ChatSala()

usuario1 = new Usuario("Ana", sala)
usuario2 = new Usuario("Luis", sala)
usuario3 = new Usuario("Marta", sala)

sala.agregarUsuario(usuario1)
sala.agregarUsuario(usuario2)
sala.agregarUsuario(usuario3)

usuario1.enviarMensaje("Hola a todos!")  
// Luis y Marta reciben el mensaje

usuario2.enviarMensaje("Hola Ana!")
// Ana y Marta reciben el mensaje

    