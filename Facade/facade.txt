/*
Categor√≠a: Estructural
Proposito: Proveer un metodo o conjunto de metodos para simplificar un conjunto 
de clases/metodos complicados.
Como funciona:
La fachada envuelve las llamadas a las clases complejas y simplificar la
interaccion.
Ejemplo:
Una API  simplificada para controlar un sistema multimedia complejo.
*/

//Subsistemas individuales
clase Luces:
    metodo encender():
        imprimir "Luces encendidas"
    
clase ReproductorDVD:
    metodo encender():
        imprimir "Reproductor de DVD encendido"

    metodo reproducir(pelicula):
        imprimir "Reproduciendo: " + pelicula

clase Proyector:
    metodo encender():
        imprimir "Proyector encendido"

clase SistemaSonido:
    metodo encender():
        imprimir "Sistema de sonido encendido"


//Fachada
clase SistemaCineEnCasa:    
    constructor():
        luces = new Luces()
        dvd = new ReproductorDVD()
        proyector = new Proyector()
        sonido = new SistemaSonido()

    metodo verPelicula(nombrePelicula):
        imprimir "Preparando para ver la pelicula..."
        luces.encender()
        proyector.encender()
        sonido.encender()
        dvd.encender()
        dvd.reproducir(nombrePelicula)


//Uso del patron
cine = new SistemaCineEnCasa()
cine.verPelicula("Harry Potter")
