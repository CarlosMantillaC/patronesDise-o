INTERFAZ Component
    MÉTODO ABSTRACTO render()

CLASE Button IMPLEMENTA Component
    MÉTODO render()
        RETORNAR "<button> </button>"

CLASE InputText IMPLEMENTA Component
    MÉTODO render()
        RETORNAR "<input />"

CLASE Select IMPLEMENTA Component
    MÉTODO render()
        RETORNAR "<select> </select>"

---------------------------------------
PATRÓN DECORATOR
---------------------------------------

CLASE InputTypeDecorator EXTENDIENDO InputText
    CONSTRUCTOR(component)
        LLAMAR super CONSTRUCTOR con component

    MÉTODO render()
        renderComp = component.render()
        REEMPLAZAR "<input" POR '<input type="radio"' EN renderComp
        RETORNAR renderComp

---------------------------------------
PATRÓN COMPOSITE
---------------------------------------
CLASE FormBody IMPLEMENTA Component
    ATRIBUTO components (lista vacía)

    MÉTODO add_component(comp)
        AGREGAR comp A components

    MÉTODO render()
        FormBody = ""
        PARA cada comp EN components
            FormBody = FormBody + comp.render()
        FIN PARA
        RETORNAR "<div>" + FormBody + "</div>"

CLASE Formulario IMPLEMENTA Component
    ATRIBUTO body (instancia de FormBody)

    CONSTRUCTOR(body)
        ASIGNAR this.body = body

    MÉTODO render()
        RETORNAR "<form>" + this.body.render() + "</form>"

---------------------------------------
PATRÓN ADAPTER
---------------------------------------
CLASE SalidaAdapter
    ATRIBUTO obj

    CONSTRUCTOR(obj)
        SI obj ES instancia DE Component ENTONCES
            ASIGNAR this.obj = obj
        SINO SI obj ES instancia DE EtiquetaTexto ENTONCES
            ASIGNAR this.obj = EtiquetaTextoAdapter(obj)
        SINO
            ASIGNAR this.obj = NULO
        FIN SI

    MÉTODO getEntradaFormada()
        SI obj NO ES NULO ENTONCES
            RETORNAR obj.render()
        SINO
            RETORNAR "<!-- componente no compatible -->"
        FIN SI

CLASE EtiquetaTexto
    MÉTODO generar_etiqueta()
        RETORNAR "<label> </label>"

CLASE EtiquetaTextoAdapter IMPLEMENTA Component
    ATRIBUTO etiqueta_texto

    CONSTRUCTOR(etiqueta_texto)
        ASIGNAR this.etiqueta_texto = etiqueta_texto

    MÉTODO render()
        RETORNAR etiqueta_texto.generar_etiqueta()

---------------------------------------
PATRÓN SINGLETON
---------------------------------------
CLASE Render
    ATRIBUTO ESTÁTICO instance = NULO

    CONSTRUCTOR()
        SI Render.instance NO ES NULO ENTONCES
            LANZAR ERROR
        FIN SI
        ASIGNAR Render.instance = this

    MÉTODO ESTÁTICO getInstance()
        SI Render.instance ES NULO ENTONCES
            CREAR nueva instancia Render()
        FIN SI
        RETORNAR Render.instance

    MÉTODO render_html(lista_de_formularios)
        contenido_forms = ""
        PARA cada form EN lista_de_formularios
            contenido_forms = contenido_forms + form.render()
        FIN PARA
        RETORNAR "<html><body>" + contenido_forms + "</body></html>"

---------------------------------------
APLICACIÓN PRINCIPAL
---------------------------------------
form_body1 = NUEVO FormBody()
form_body1.add_component(NUEVO Button())
form_body1.add_component(NUEVO InputTypeDecorator(NUEVO InputText()))

form_body2 = NUEVO FormBody()
form_body2.add_component(NUEVO Select())
form_body2.add_component(NUEVO SalidaAdapter(NUEVO EtiquetaTexto()))

form1 = NUEVO Formulario(form_body1)
form2 = NUEVO Formulario(form_body2)

pagina = Render.getInstance()
html_final = pagina.render_html([form1, form2])

IMPRIMIR html_final


