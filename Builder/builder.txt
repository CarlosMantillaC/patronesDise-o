/*
Categoria: Creacional
Proposito: Separar la construccion de un objeto complejo de su 
representacion para que el mismo proceso pueda crear diferentes representaciones.
Como funciona:
El director guia la construccion paso a paso
El builder construye cada parte del objeto
Ejemplo:
Construccion de un vehiculo que puede tener distintas configuraciones:
coche deportivo, coche familiar, etc.
*/

interfaz ComponenteHTML:
    metodo mostrar()


clase Select implements ComponenteHTML:
    metodo mostrar(): Texto:
        retornar "<select>Mostrar</select>"

clase Button implements ComponenteHTML:
    metodo mostrar(): Texto:
        retornar "<button>Mostrar</button>"

clase Checkbox implements ComponenteHTML:
    metodo mostrar(): Texto:
        retornar "<input type='checkbox' /> Mostrar"


clase Builder:
    componentes: []

    metodo agregar(componente: ComponenteHTML):
        componentes.agregar(componente)
        retornar this

    metodo build():
        html = ""
        para cada c en componentes:
            html += c.mostrar() + "\n"
        retornar new Form(html)


clase Form:
    constructor(html):
        this.html = html

    metodo render():
        retornar html


// Uso
form = new Builder()
    .agregar(new Select())
    .agregar(new Button())
    .agregar(new Checkbox())
    .build()

imprimir form.render()
