/*
Categoria: Comportamental
Proposito: Permitir pasar una solicitud a lo largo de una cadena de objetos
hasta que alguno la maneje.
Como funciona:
Cada objeto en la cadena decide si procesa la solicitud o la pasa al siguiente.
Ejemplo:
Filtros de autorización en un servidor web.
*/

//Interfaz del manejador
interfaz ManejarMonto:
    atributo siguiente
    metodo autorizar()
    metodo pasarSiguiente()

//Clases concretas
clase Empleado implementa ManejarMonto:
    siguiente: ManejarMonto

    metodo Autorizar(monto):
        si monto <= 1000:
            imprimir "Monto autorizado por el empleado"
        sino:
            pasarSiguiente(monto)
    
    metodo pasarSiguiente(monto):
        imprimir "El empleado pasa el monto al supervisor"
        si siguiente != nulo:
            siguiente.autorizar(monto)
    
clase Supervisor implementa ManejarMonto:
    siguiente: ManejarMonto

    metodo autorizar(monto):
        si monto <= 10000:
            imprimir "Monto autorizado por el supervisor"
        sino:
            pasarSiguiente(monto)

    metodo pasarSiguiente(monto):
        imprimir "El supervisor pasa el monto al gerente"
        si siguiente != nulo:
            siguiente.autorizar(monto)

clase Gerente implementa ManejarMonto:
    siguiente: ManejarMonto

    metodo autorizar(monto):
        si monto <= 100000:
            imprimir "Monto autorizado por el gerente"
        sino:
            pasarSiguiente(monto)
    
    metodo pasarSiguiente(monto):
        imprimir "Monto imposible de autorizar"


//Uso del patron
empleado = new Empleado()
supervisor = new Supervisor()
gerente = new Gerente()

empleado.siguiente = supervisor
supervisor.siguiente = gerente

empleado.autorizar(700)       // → autorizado por empleado
empleado.autorizar(3000)      // → pasa a supervisor, autorizado
empleado.autorizar(7500)      // → pasa a supervisor → gerente, autorizado
empleado.autorizar(20000)     // → pasa a todos, no autorizado
