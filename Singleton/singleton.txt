/*
Categoría: Creacional
Proposito: Garantizar que una clase tenga una unica instancia
y proporcionar un punto global de acceso a ella.
Como funciona:
La clase tiene un constructor privado para evitar que se creen nuevas
instancias desde afuera.
Posee un metodo estatico que crea y devuelve la instancia unica, si no existe,
la crea; si existe, la retorna.
Ejemplo:
Una clase que maneja la configuracion de una aplicacion o conexion a base de datos,
donde solo debe existir una instancia.
*/


clase GestorConfiguracion:
    //Variable estatica que guarda la instancia unica
    propiedad estatica instancia: GestorConfiguracion = null

    //Constructor privado (protegido para evitar creacion externa)
    privado constructor():
        imprimir "Configuración cargada"

    //Metodo estatico de acceso a la instancia unica
    metodo estatico obtenerInstancia():
        si instancia == null:
            instancia = new GestorConfiguracion()
        return instancia

    //Metodo de ejemplo
    metodo obtenerValor(clave):
        imprimir "Valor para " + clave


//Uso del patron
config1 = GestorConfiguracion.obtenerInstancia()
config2 = GestorConfiguracion.obtenerInstancia()

imprimir (config1 == config2) 

valor = config1.obtenerValor("modo")
imprimir valor  